# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2019-06-27 14:35
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CodeSnippet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('filepath', models.CharField(max_length=255)),
                ('lines', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.CharField(max_length=255)),
                ('label', models.CharField(max_length=255)),
                ('group', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='InfoCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.FloatField()),
                ('pagerank', models.FloatField()),
                ('camino', models.BooleanField()),
                ('frequency', models.PositiveIntegerField()),
                ('line', models.PositiveIntegerField()),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Concept')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InfoPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.FloatField()),
                ('pagerank', models.FloatField()),
                ('camino', models.BooleanField()),
                ('frequency', models.PositiveIntegerField()),
                ('page', models.PositiveIntegerField()),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Concept')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InfoVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.FloatField()),
                ('pagerank', models.FloatField()),
                ('camino', models.BooleanField()),
                ('frequency', models.PositiveIntegerField()),
                ('timestamp', models.PositiveIntegerField()),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotator.Concept')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PDF',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('filepath', models.CharField(max_length=255)),
                ('nbrOfPages', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('filepath', models.CharField(max_length=255)),
                ('duration', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
